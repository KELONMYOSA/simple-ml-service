version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RMQ_PASS}
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit disk_free_limit 2147483648
    restart: unless-stopped
    networks:
      - ml-service-net

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    networks:
      - ml-service-net

  postgres_db:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DATABASE}
    volumes:
      - pg_db_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - ml-service-net

  fastapi:
    build:
      context: .
      dockerfile: DockerfileFastapi
    image: fastapi-backend
    container_name: fastapi
    depends_on:
      - rabbitmq
      - redis
      - postgres_db
    restart: unless-stopped
    networks:
      - ml-service-net

  celery:
    build:
      context: .
      dockerfile: DockerfileCelery
    image: celery-backend
    container_name: celery
    environment:
      RMQ_URL: ${RMQ_URL}
      REDIS_URL: ${REDIS_URL}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
    depends_on:
      - fastapi
    restart: unless-stopped
    networks:
      - ml-service-net

  flet:
    build:
      context: .
      dockerfile: DockerfileFlet
    image: flet-frontend
    container_name: flet
    ports:
      - "80:80"
    depends_on:
      - celery
    restart: unless-stopped
    networks:
      - ml-service-net

volumes:
  pg_db_data:

networks:
  ml-service-net:
    driver: bridge